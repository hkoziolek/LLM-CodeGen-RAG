<?xml version='1.0' encoding='utf-8'?>
<project xmlns:ns1="http://www.plcopen.org/xml/tc6_0201" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plcopen.org/xml/tc6_0201">
  <fileHeader companyName="Unknown" productName="Unnamed" productVersion="1" creationDateTime="2022-08-16T15:49:17"/>
  <contentHeader name="Unnamed" modificationDateTime="2023-12-03T08:39:51">
    <coordinateInfo>
      <fbd>
        <scaling x="10" y="10"/>
      </fbd>
      <ld>
        <scaling x="10" y="10"/>
      </ld>
      <sfc>
        <scaling x="10" y="10"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes/>
    <pous>
      <pou name="FLOOR2" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[FLOOR2 := REAL_TO_DINT(X);
IF DINT_TO_REAL(FLOOR2) > X THEN
	FLOOR2 := FLOOR2 - DINT#1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a rounding function which returns the biggest possible integer which is less or equal to X. floor2(3.14) = 3 floor2(-3.14) = -4]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MODR" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="DIVI">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF divi = 0.0 THEN
	MODR := 0.0;
ELSE
	MODR := in - DINT_TO_REAL(FLOOR2(in / divi)) * divi;
END_IF;
(* from OSCAT library; www.oscat.de  *)
(* FC FLOOR2 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[modulo funtion for real numbers modr(5.5,2.5) = 0.5]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SIGN_R" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SIGN_R := in < 0.0;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function return true if the real input is negative]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="T_PLC_MS" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <localVars>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="debug">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="N">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="offset">
              <type>
                <UDINT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="temp">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx := 0;

{extern unsigned long __tick;
extern unsigned long long common_ticktime__;
unsigned long long ticktime_ms = (common_ticktime__)/1000000;
UDINT plc_time = (UDINT)(ticktime_ms * (unsigned long long)__tick);
TX = plc_time}

T_PLC_MS := tx;
IF debug THEN
	T_PLC_MS := (DWORD_TO_UDINT(SHL(UDINT_TO_DWORD(T_PLC_MS),N) OR SHL(temp,N))-1) + OFFSET;
END_IF;

(* Original Code:
tx := TIME();
T_PLC_MS := TIME_TO_DWORD(Tx);
IF debug THEN
	T_PLC_MS := (SHL(T_PLC_MS,N) OR SHL(DWORD#1,N)-1) + _OFFSET;
END_IF;
*)

(* From OSCAT library, www.oscat.de

this is a temporary T_PLC_MS FB until OpenPLC gets itÂ´s own time() functionality *)

(* PLC_TIME and Global variables PLC_SCAN_CYCL and PLC_CYCL_TIME required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Output current execution time in miliseconds]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="GEN_SIN" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="PT">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="AM">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="OS">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="DL">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tx">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="temp">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= UDINT_TO_TIME(T_PLC_MS(en:=true)) - last;

DL := modR(dl,1.0);
IF dl < 0.0 THEN dl := 1.0 - dl; END_IF;

(* init section *)
IF NOT init THEN
	init := TRUE;
	last := tx;
	tx := t#0s;
END_IF;

(* add last if one cycle is finished *)
IF tx >= pt THEN
	last := last + pt;
	tx := tx - pt;
END_IF;

(* generate sine wave *)
IF pt > t#0s THEN temp := SIN(6.283185307179586476 * TIME_TO_REAL(tx + multime(pt, dl)) / TIME_TO_REAL(pt)); END_IF;
out := am * 0.5 *  temp + os;

(* boolean output Q *)
q := NOT sign_R(temp);

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS, SIGN_R required*)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this signal generator generates a sine wave output]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="STAIR" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF _D > 0.0 THEN
	STAIR := DINT_TO_REAL(REAL_TO_DINT(X / _D)) * _D;
ELSE
	STAIR := X;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[the function stair converts an anlog input signal to a staircase like output]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="program0" pouType="program">
        <interface>
          <localVars>
            <variable name="dummy_var">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="mySineToStair">
              <type>
                <derived name="SINE_TO_STAIR"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[mySineToStair();]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="SINE_TO_STAIR" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="genSin">
              <type>
                <derived name="GEN_SIN"/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[genSin]]></xhtml:p>
              </documentation>
            </variable>
          </localVars>
          <outputVars>
            <variable name="outputSignal">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[outputSignal]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[genSin(PT := T#10s, AM := 10.0, OS := 5.0, DL := 0.0);
(*stair(X := genSin.OUT, _D := 2.3);*)
outputSignal := STAIR(X := genSin.OUT, _D := 2.3);

]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[SINE_TO_STAIR]]></xhtml:p>
        </documentation>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Config0">
        <resource name="Res0">
          <task name="task0" priority="0" interval="T#200ms">
            <pouInstance name="instance0" typeName="program0"/>
          </task>
        </resource>
      </configuration>
    </configurations>
  </instances>
</project>
